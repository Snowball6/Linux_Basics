
bash的基础特性：

	globbing：文件名通配(整体文件名匹配，而非部分)

		匹配模式：元字符
			*：匹配任意长度的任意字符
				pa*, *pa*, *pa, *p*a*
					pa, paa, passwd
			?：匹配任意单个字符
				pa?, ??pa, p?a, p?a?
					pa, paa, passwd
			[]：匹配指定范围内的任意单个字符
				有几种特殊格式：
					[a-z], [A-Z], [0-9], [a-z0-9]
					[[:upper:]]：所有大写字母
					[[:lower:]]：所有小写字母
					[[:alpha:]]：所有字母
					[[:digit:]]：所有数字
					[[:alnum:]]：所有的字母和数字
					[[:space:]]：所有空白字符
					[[:punct:]]：所有标点符号

					pa[0-9][0-9], 2[0-9][0-9]
			[^]：匹配指定范围外的任意单个字符
				[^[:upper:]]
				[^0-9]
				[^[:alnum:]]


	IO重定向及管道

		程序：指令+数据
			程序：IO

			可用于输入的设备：文件
				键盘设备、文件系统上的常规文件、网卡等；
			可用于输出的设备：文件
				显示器、文件系统上的常规文件、网卡等；

			程序的数据流有三种：
				输入的数据流；<-- 标准输入(stdin)，键盘；
				输出的数据流：--> 标准输出(stdout)，显示器；
				错误输出流：  --> 错误输出(stderr)，显示器；

			fd: file descriptor，文件描述符
				标准输入：0
				标准输出：1
				错误输出：2

		IO重定向：

			输出重定向：>
				特性：覆盖输出
			输出重定向：>>
				特性：追加输出

			# set -C
				禁止覆盖输出重定向至已存在的文件；
				此时可使用强制覆盖输出：>|
			# set +C
				关闭上述特性

			错误输出流重定向：2>, 2>>

			合并正常输出流和错误输出流：
				(1) &>, &>>
				(2) COMMAND > /path/to/somefile 2>&1
				    COMMAND >> /path/to/somefile 2>&1

				特殊设备：/dev/null

			输入重定向：<

			tr命令：
				tr [OPTION]... SET1 [SET2]
					把输入的数据当中的字符，凡是在SET1定义范围内出现的，通通对位转换为SET2出现的字符

				用法1：
					tr SET1 SET2 < /PATH/FROM/SOMEFILE
				用法2：
					tr -d SET1 < /PATH/FROM/SOMEFILE

				注意：不修改原文件

			Here Document：<<

				cat << EOF
				cat > /PATH/TO/SOMEFILE << EOF

			管道：连接程序，实现将前一个命令的输出直接定向后一个程序当作输入数据流
				COMMAND1 | COMMAND2 | COMMAND3 | ...

				tee命令：
					COMMAND | tee /PATH/TO/SOMEFILE

			练习1：把/etc/passwd文件的前6行的信息转换为大写字符后输出；
				head -n 6 /etc/passwd | tr 'a-z' 'A-Z'

		命令总结：tr, tee
		
-------------------------------------------------------------------------------------------------------------------------------------------

	用户、组和权限管理
		用户类别：
			管理员
			普通用户
				系统用户
				登录用户

			用户标识：UserID, UID
				16bits二进制数字：0-65535
					管理员：0
					普通用户：1-65635
						系统用户：1-499(CentOS6), 1-999(CentOS7)
						登录用户：500-60000(CentOS6), 1000-60000(CentOS7)

				名称解析：名称转换
					Username <--> UID

					根据名称解析库进行：/etc/passwd

		组：
			组类别1：
				管理员组
				普通用户组
					系统组
					登录组

			组标识：GroupID, GID
				管理员组：0
					普通用户组：1-65635
						系统用户组：1-499(CentOS6), 1-999(CentOS7)
						登录用户组：500-60000(CentOS6), 1000-60000(CentOS7)	

			名称解析：groupname <--> gid
				解析库：/etc/group	

			组类别2：
				用户的基本组
				用户的附加组

			组类别3:
				私有组：组名同用户名，且只包含一个用户；
				公共组：组内包含了多个用户；

		认证信息：
			通过比对事先存储的，与登录时提供的信息是否一致；
			password：
				/etc/shadow
				/etc/gshadow

			加密算法：
				对称加密：加密和解密使用同一个密码；
				非对称加密：加密和解密使用的一对儿密钥；
					密钥对儿：
						公钥：public key
						私钥: private key
				单向加密：只能加密，不能解密；提取数据特征码；
					定长输出
					雪崩效应

					算法：
						md5: message digest, 128bits
						sha：secure hash algorithm, 160bits
						sha224
						sha256
						sha384
						sha512

					在计算之时加salt，添加的随机数；

		/etc/passwd：用户的信息库
			name:password:UID:GID:GECOS:directory:shell

			name: 用户名
			password：可以是加密的密码，也可是占位符x；
			UID：
			GID：用户所属的主组的ID号；
			GECOS：注释信息
			directory：用户的家目录；
			shell：用户的默认shell，登录时默认shell程序；

		/etc/shadow：用户密码
			用户名:加密的密码:最近一次修改密码的时间:最短使用期限:最长使用期限:警告期段:过期期限:保留字段

		/etc/group：组的信息库
			group_name:password:GID:user_list

				user_list：该组的用户成员；以此组为附加组的用户的用户列表；