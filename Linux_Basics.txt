	Linux的哲学思想之一：一切皆文件；
		表现之一：硬件设备也通过文件表示；
			物理终端：/dev/console
			虚拟终端：/dev/tty# [1,6]
			串行终端：/dev/ttyS#
			伪终端：/dev/pts/#
	注意：在启动设备之后，在其上关联一个用户接口程序，即可实现与用户交互；
		查看终端设备：
			~]# tty
		查看接口程序：
			~]# echo $SHELL
		启动GUI:
			在某一虚拟终端接口运行命令：startx &
		CLI接口：
			命令行接口：
				[root@node1 ~]# COMMAND
					prompt：
						root: 当登录的用户
						node1: 当前主机的主机名，非完整格式；
						~：用户当前所在的目录(current directory)，也称为工作目录(working directory)；相对路径；
						#：命令提示符；
							#：管理员账号，为root; 拥有最高权限，能执行所有操作；
							$：普通用户，非root用户；不具有管理权限，不能执行系统管理类操作；
						注意：建议使用非管理员账号登录；
						执行管理操作临时切换至管理员，操作完成即退回；

	几个基础命令：
		关机命令：
			CentOS 7：
				~]# systemctl poweroff
				~]# systemctl reboot
			*：
				~]# poweroff
				~]# halt
				~]# reboot

------------------------------------------------------------------------------------------------------------------------------------------

Linux基础知识
	命令的语法通用格式：
		# COMMAND OPTIONS ARGUMENTS
		COMMAND: 
			发起一命令：请求内核将某个二进制程序运行为一个进程；
				程序 --> 进程
				静态 --> 动态（有生命周期）

			命令本身是一个可执行的程序文件：二进制格式的文件，有可能会调用共享库文件；
				注意：系统管理命令普遍存在sbin文件中，系统普通命令普遍存在于bin文件中
				多数系统程序文件都存放在：/bin, /sbin, /usr/bin, /usr/sbin，/usr/local/bin, /usr/local/sbin
					普通命令：/bin, /usr/bin, /usr/local/bin
					管理命令：/sbin, /usr/sbin, /usr/local/sbin
				共享库：/lib, /lib64, /usr/lib, /usr/lib64, /usr/local/lib, /usr/local/lib64
					32bits的库：/lib, /usr/lib, /usr/local/lib
					64bits的库：/lib64, /usr/lib64, /usr/local/lib64

				注意：并非所有的命令都有一个在某目录与之对应的可执行程序文件

			命令必须遵循特定格式规范：exe, msi, ELF(Linux)
				~]# file /bin/ls

			命令分为两类：
				由shell程序的自带的命令：内置命令(builtin)
				独立的可执行程序文件，文件名即命令名：外部命令

			shell程序是独特的程序，负责解析用户提供的命令；
				环境变量：
					PATH：从哪些路径中查找用户键入的命令字符串所对应的命令文件；
						~]# echo $PATH
						/usr/lib64/qt-3.3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin

						查找次序：自左而右；

			查看命令类型：
				type COMMAND

	获取命令的使用帮助：
		内部命令：
			help COMMAND
		外部命令：
			(1) 命令自带简要格式的使用帮助
				# COMMAND --help
			(2) 使用手册：manual
				位置：/usr/share/man
				# man COMMAND

					SECTION：
						NAME：功能性说明
						SYNOPSIS：语法格式
						DESCRIPTION：描述
						OPTIONS：选项
						EXAMPLES：使用示例
						AUTHOR: 作者
						BUGS: 报告程序bug的方式
						SEE ALSO: 参考
						...

					SYNOPSIS: 
						[]：可选内容；
						<>：必须提供的内容；
						a|b|c：多选一；
						...：同类内容可出现多个；

				man命令打开手册以后的操作方法：
					翻屏：
						空格键：向文件尾翻一屏；
						b: 向文件首部翻一屏；
						Ctrl+d：向文件尾部翻半屏；
						Ctrl+u：向文件首部翻半屏；
						回车键：向文件尾部翻一行；
						k: 向文件首部翻一行；
						G：跳转至最后一行；
						#G: 跳转至指定行；
						1G：跳转至文件首部；

					文本搜索：
						/keyword：从文件首部向文件尾部依次查找；不区分字符大小写；
						?keyword：从文件尾部向文件首部依次查找；	
							n: 与查找命令方向相同；
							N: 与查找命令方向相反；

					退出：
						q: quit


		常用命令：
			pwd: printing working directory
				显示工作目录

			cd：change directory
				cd [/PATH/TO/SOMEDIR]	
					cd: 切换回家目录；
						注意：bash中, ~表示家目录；
					cd ~：切换回自己的家目录
					cd ~USERNAME：切换至指定用户的家目录；
					cd -：在上一次所在目录与当前目录之间来回切换；
						相关的环境变量
							$PWD：当前工作目录
							$OLDPWD：上一次的工作目录

					.
					..

			ls: list, 列出指定目录下的内容
				ls [OPTION]... [FILE]...

					-a: 显示所有文件，包括隐藏文件；
					-A：显示除.和..之外的所有文件；
					-l: --long, 长格式列表，即显示文件的详细属性信息；
						-rw-r--r--. 1 root   root     8957 10月 14 19:34 boot.log
						-：文件类型，-, d, b, c, l, s, p
						rw-r--r--
							rw-：文件属主的权限；
							r--：文件属组的权限；
							r--：其它用户（非属主、属组）的权限；
						1：数字表示文件被硬链接的次数；
						root：文件的属主；
						root：文件的属组；
						8957：数字表示文件的大小，单位是字节；
						10月 14 19:34 ：文件最近一次被修改的时间；
						boot.log：文件名
					-h, --human-readable：对文件大小单位换算；换算后结果可能会非精确值；
					-d：查看目录自身而非其内部的文件列表；
					-r: reverse, 逆序显示；
					-R: recursive，递归显示；

			cat：concatenate
				文件文本查看工具；
					cat /etc/fstab
					cat /etc/passwd

				cat [OPTION]... [FILE]...
					-n：给显示的文本行编号；
					-E: 显示行结束符$；

			tac：
				文件文本查看工具；
					tac /etc/fstab
					tac /etc/passwd

				tac [OPTION]... [FILE]...
					-n：给显示的文本行编号；
					-E: 显示行结束符$；

			file：查看文件内容类型；
				file [FILE]...
				
-----------------------------------------------------------------------------------------------------------------------------------------

		echo：回显
			echo [SHORT-OPTION]... [STRING]...	
				-n: 不进行换行；
				-e：让转义符生效；
				\b: 取消字符串间的空格   echo -e "1 \b2 3"   -----》12 3
				\n：换行                 echo -e "1 \n2 3"   -----》1
																	2 3
				\t：制表符               echo -e "1 \t2 3"   -----》1 	2 3
				\v: 垂直制表符           echo -e "1\v2\v3"   -----》1
																	 2
																	  3
				\r:删除\r前的所有字符    echo -e "1\r23"     -----》 23
				\c:删除\c后的所有字符，但是不会换行     echo -e "1\c23"     -----》 1[root@localhost ~]（不会换行）

				STRING可以使用引号，单引号和双引号均可用；
					单引号：强引用，变量引用不执行替换；
						~]# echo '$SHELL'
					双引号：弱引用，变量引用会被替换；
						~]# echo "$SHELL"

			注意：变量引用的正规符号	
					${name}
					
-----------------------------------------------------------------------------------------------------------------------------------------


		日期相关的命令：
			Linux：系统启动时从硬件读取日期和时间信息；读取完成以后，就不再与硬件相关联；
				系统时钟
				硬件时钟
			
			date：系统时钟
				 格式化输出：date "+%F %H:%M:%S"     -------》
				 比如将系统时间设定成2019年11月26日的命令：date -s 20191126
				 将系统时间设定成11点12分0秒的命令：date -s 11:12:00
				设定日期时间：date [MMDDhhmm[[CC]YY][.ss]]

			hwclock, clock：硬件时钟
				显示或设定硬件时钟
					-s, --hctosys：以硬件为准，把系统调整为与硬件时间相同；
					-w, --systohc：以系统为准，把硬件时间调整为与系统时钟相同；				

			cal：日历
				 cal [[month] year]
				 
------------------------------------------------------------------------------------------------------------------------------------------

Linux文件系统：
	FHS：
		Filesystem Hierarchy Standard
			/bin：所有用户可用的基本命令程序文件；
			/sbin：供系统管理使用的工具程序；
			/boot：引导加载器必须用到的各静态文件：kernel, initramfs(initrd), grub等；
			/dev：存储特殊文件或设备文件；
				设备有两种类型：字符设备(线性设备)、块设备(随机设备)；
			/etc：系统程序的配置文件，只能为静态；
			/home：普通的家目录的集中位置；一般每个普通用户的家目录默认为此目录下与用户名同名的子目录，/home/USERNAME；
			/root：管理员的家目录；可选；
			/lib：为系统启动或根文件系统上的应用程序(/bin, /sbin等)提供共享库，以及为内核提供内核模块
				libc.so.*：动态链接的C库；
				ld*：运行时链接器/加载器；
				modules：用于存储内核模块的目录；
			/lib64：64位系统特有的存放64位共享库的路径；
			/media：便携式设备挂载点，cdrom, floppy等；
			/mnt：其它文件系统的临时挂载点；
			/opt：附加应用程序的安装位置；可选路径；
			/srv：当前主机为服务提供的数据；
			/tmp：为那些会产生临时文件的程序提供的用于存储临时文件的目录；可供所用户执行写入操作；有特殊权限；
			/usr：usr Hierarchy，全局共享的只读数据路径；
				bin, sbin
				lib, lib64
				include：C程序头文件；
				share：命令手册页和自带文档等架构特有的文件的存储位置
				local：另一个层级目录；
				X11R6：X-Window程序的安装位置
				src：程序源码文件的存储位置
			/usr/local：Local hierarchy，让系统管理员安装本地应用程序；也通常用于安装第三方程序；
			/var：/var Hierarchy，存储常发生变化的数据的目录；
				cache	Application cache data
				lib		Variable state information
				local	Variable data for /usr/local
				lock	Lock files
				log		Log files and directories
				opt		Variable data for /opt
				run		Data relevant to running processes
				spool	Application spool data
				tmp		Temporary files preserved between system reboots	

			/proc：基于内存的虚拟文件系统，用于为内核及进程存储其相关信息；它们多为内核参数，例如net.ipv4.ip_forward, 虚拟为net/ipv4/ip_forward, 存储于/proc/sys/, 因此其完整路径为/proc/sys/net/ipv4/ip_forward；
			/sys：sysfs虚拟文件系统提供了一种比proc更为理想的访问内核数据的途径；其主要作用在于为管理Linux设备提供一种统一模型的的接口；
			
----------------------------------------------------------------------------------------------------------------------------------------
	Linux系统上的文件类型：
		-：常规文件；即f；
		d: directory，目录文件；
		b: block device，块设备文件，支持以“block”为单位进行随机访问
		c：character device，字符设备文件，支持以“character”为单位进行线性访问
			major number：主设备号，用于标识设备类型，进而确定要加载的驱动程序
			minor number：次设备号，用于标识同一类型中的不同的设备；
				8位二进制：0-255
		l：symbolic link，符号链接文件；
		p: pipe，命名管道；
		s: socket，套接字文件；

	基本命令：
		命令类型：
			外部命令
			shell内嵌命令

			type COMMAND：
				内部：builtin
				外部：显示为命令文件路径；
					注意：命令可以有别名；别名可以与原名相同，此时原名被隐藏；此时如果要运行原命令，则使用\COMMAND；

			命令别名：
				获取所有可用别名的定义：
					~]# alias
				定义别名：
					~]# alias NAME='COMMAND'
					注意：仅对当前shell进程有效
				撤销别名：
					~]# unalias NAME
			
------------------------------------------------------------------------------------------------------------------------------------------

bash的基础特性之一：

		命令历史：shell进程会其会话中保存此前用户提交执行过的命令；
			~]# history
				定制history的功能，可通过环境变量实现：
					HISTSIZE：shell进程可保留的命令历史的条数；
					HISTFILE：持久保存命令历史的文件；
						.bash_history
					HISTFILESIZE：命令历史文件的大小；

			命令用法：
				history [-c] [-d 偏移量] [n] 
				或 history -anrw [文件名] 
				或 history -ps 参数 [参数...]

				-c: 清空命令历史；
				-d offset：删除指定命令历史
				-r: 从文件读取命令历史至历史列表中；
				-w：把历史列表中的命令追加至历史文件中；
				history #：显示最近的#条命令；

			调用命令历史列表中的命令：
				!#：再一次执行历史列表中的第#条命令；
				!!：再一次执行上一条命令；
				!STRING：再一次执行命令历史列表中最近一个以STRING开头的命令；

					注意：命令的重复执行有时候需要依赖于幂等性；

			调用上一条命令的最后一个参数：
				快捷键：ESC, .
				字符串：!$

			控制命令历史记录的方式：
				环境变量：HISTCONTROL
					ignoredups：忽略重复的命令；
					ignorespace：忽略以空白字符开头的命令；
					ignoreboth：以上两者同时生效；

				修改变量的值：
					NAME='VALUE'
					
---------------------------------------------------------------------------------------------------------------------------------------

	目录管理类的命令：
		mkdir, rmdir

		mkdir：make directories

			mkdir [OPTION]... DIRECTORY...
				-p: 自动按需创建父目录；
				-v: verbose，显示详细过程；
				-m MODE：直接给定权限；

				注意：路径基名方为命令的作用对象；基名之前的路径必须得存在；

		rmdir：remove empty directories

			rmdir [OPTION]... DIRECTORY...

				-p：删除某目录后，如果其父目录为空，则一并删除之；
				-v: 显示过程；

	bash的基础特性之：命令行展开
		~：自动展开为用户的家目录，或指定的用户的家目录；			
		{}：可承载一个以逗号分隔的路径列表，并能够将其展开为多个路径；
			例如：/tmp/{a,b} 相当于 /tmp/a /tmp/b
